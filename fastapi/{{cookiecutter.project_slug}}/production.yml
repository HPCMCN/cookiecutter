version: '3'

volumes:
  {%- if cookiecutter.database_engine == 'postgresql' %}
  production_postgres_data: {}
  production_postgres_data_backups: {}
  {%- endif %}
  {%- if cookiecutter.database_engine == 'mysql' %}
  production_mysql_data: {}
  production_mysql_data_backups: {}
  {%- endif %}
  production_traefik: {}

services:
  django:{% if cookiecutter.use_celery == 'y' %} &django{% endif %}
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_django
    platform: linux/x86_64
    depends_on:
      {%- if cookiecutter.database_engine == 'postgresql' %}
      - postgres
      {%- endif %}
      {%- if cookiecutter.database_engine == 'mysql' %}
      - mysql
      {%- endif %}
      - redis
    env_file:
      - ./.envs/.production/.django
      {%- if cookiecutter.database_engine == 'postgresql' %}
      - ./.envs/.production/.postgres
      {%- endif %}
      {%- if cookiecutter.database_engine == 'mysql' %}
      - ./.envs/.production/.mysql
      {%- endif %}
    command: /start

  {%- if cookiecutter.database_engine == 'postgresql' %}
  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
  {%- endif %}
  {%- if cookiecutter.database_engine == 'mysql' %}
  mysql:
    build:
      context: .
      dockerfile: ./compose/production/mysql/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_mysql
    container_name: mysql
    volumes:
      - production_mysql_data:/var/lib/mysql:z
      - production_mysql_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.mysql
  {%- endif %}

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      {%- if cookiecutter.use_celery == 'y' %}
      - "0.0.0.0:5555:5555"
      {%- endif %}

  redis:
    image: redis:6
  {%- if cookiecutter.use_celery == 'y' %}

  celeryworker:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_flower
    command: /start-flower
  {%- endif %}
  {%- if cookiecutter.cloud_provider == 'AWS' %}

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z
  {%- endif %}
